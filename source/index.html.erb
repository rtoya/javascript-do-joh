<canvas id="inputCanvas" width="320" height="240" style="display:none"></canvas>
<video id="inputVideo" autoplay loop></video>
<button type="button" id="js-stopTracking" style="display:none" >監視を停止</button>
<button type="button" id="js-startTracking" style="display:none" >監視を再開</button>
<p id="js-detectStatus"></p>

<%= javascript_include_tag "headtrackr.min" %>
<script>
    /*
var videoInput = document.getElementById('inputVideo');
var canvasInput = document.getElementById('inputCanvas');
var htracker = new headtrackr.Tracker();

var undetected_number_of_times = 0;

// 一度顔認識は完了してから使用する前提
document.addEventListener("headtrackrStatus", function(event){
  if(event.status == "hints"){
    undetected_number_of_times += 1;
  }else if(event.status == "found"){
    undetected_number_of_times = 0;
  }else{
    return false;
  }

  if(undetected_number_of_times == 20){
    audio.play();
  }
});

htracker.init(videoInput, canvasInput);
htracker.start();

var monitor_stop_btn = document.getElementById('js-stopTracking');
var monitor_start_btn = document.getElementById('js-startTracking');
monitor_stop_btn.addEventListener("click", function(){
  htracker.stop();
});
monitor_start_btn.addEventListener("click", function(){
  htracker.start();
});
*/
</script>

<script type="text/javascript">
    //youtubeを再生するよう
/*
var tag = document.createElement('script');
tag.src = "//www.youtube.com/iframe_api";
var firstScriptTag = document.getElementsByTagName('script')[0];
firstScriptTag.parentNode.insertBefore(tag,  firstScriptTag);
var done = false;
var player;
function onYouTubeIframeAPIReady() {
  player = new YT.Player('player',  {
    height: '390',
    width: '640',
    videoId: 'pFhYe97dbvE',
    events: {
      'onReady': onPlayerReady,
      'onStateChange': onPlayerStateChange
    }
  });
}
*/
//寝落ちしてからアラートが鳴るまでの時間を設定
function start_func(){
  var s_hour = $("select[name='set_hour']").val();
  var s_min = $("select[name='set_min']").val();
  var interval = (s_hour * 60 + s_min) * 30;

  var videoInput = document.getElementById('inputVideo');
  var canvasInput = document.getElementById('inputCanvas');
  var htracker = new headtrackr.Tracker();

  var undetected_number_of_times = 0;


  document.addEventListener("headtrackrStatus", function(event){
  if(event.status == "hints"){
    undetected_number_of_times += 1;
  }else if(event.status == "found"){
    undetected_number_of_times = 0;
  }else{
    return false;
  }

  if(undetected_number_of_times == interval){
    audio.play();
  }
});

htracker.init(videoInput, canvasInput);
htracker.start();
$("#js-startTracking").show();
$("#js-stopTracking").show();
var monitor_stop_btn = document.getElementById('js-stopTracking');
var monitor_start_btn = document.getElementById('js-startTracking');
monitor_stop_btn.addEventListener("click", function(){
  htracker.stop();
});
monitor_start_btn.addEventListener("click", function(){
  htracker.start();
});

};
</script>

<audio id="audio" src="test.mp3" style="visibility:hidden" controls>
  <p>kaito-sho-jo</p>
</audio>

<form>
<nobr>寝落ちしたらだいたい</nobr>
  <select name="set_hour">
    <option value="0">0</option>
    <option value="1" selected>1</option>
    <option value="2">2</option>
    <option value="3">3</option>
    <option value="4">4</option>
    <option value="5">5</option>
    <option value="6">6</option>
  </select>
  <nobr>時間</nobr>
  <select name="set_min">
    <option value="0">0</option>
    <option value="1">1</option>
    <option value="30">30</option>
  </select>
  <nobr>分後に起こしますー</nobr>
  <input type="button" value="set" onclick="start_func()">
</form>
